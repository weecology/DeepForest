[project]
name = "deepforest"
version = "1.5.3-dev0"
description = "Platform for individual detection from airborne remote sensing including trees, birds, and livestock. Supports multiple detection models, adding models for species classification, and easy fine tuning to particular ecosystems."
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = {text = "MIT"}
keywords = ["deep-learning", "forest", "ecology", "computer-vision"]
classifiers = [
    "Development Status :: 6 - Mature",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

authors = [
    { name = "Ben Weinstein", email = "benweinstein@weecology.org" },
    { name = "Henry Senyondo", email = "henrykironde@gmail.com" },
    { name = "Muhammed Magdy", email = "muhammedmagdy1015@gmail.com" },
    { name = "Om Doiphode", email = "omdoiphode161@gmail.com" },
    { name = "Dingyi Fang", email = "imfangdingyi@gmail.com" },
    { name = "Ethan White", email = "ethan@weecology.org" },
]

dependencies = [
    "aiohttp",
    "aiolimiter",
    "albumentations>=2.0.0",
    "geopandas",
    "h5py",
    "huggingface_hub>=0.25.0",
    "hydra-core",
    "geopandas>=1.0.0",
    "matplotlib",
    "numpy<2.0",
    "omegaconf",
    "opencv-python-headless>=4.5.4",
    "pandas",
    "pillow>6.2.0",
    "psutil",
    "pycocotools",
    "pytorch-lightning>=2.1.0,<3.0.0",
    "pyyaml>=5.1.0",
    "rasterio",
    "rtree",
    "safetensors<0.6.0",
    "setuptools",
    "slidingwindow",
    "supervision",
    "tensorboard",
    "timm",
    "torch>=2.7.0",
    "torchvision>=0.17.0",
    "tqdm",
    "transformers>=4.56",
    "xmltodict",
    "transformers",
    "timm>=1.0.15",
    "faster-coco-eval>=1.6.7",
    "comet-ml>=3.51.0",
]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchvision = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]

[project.urls]
Documentation = "http://deepforest.readthedocs.io/en/latest/"
Source = "https://github.com/Weecology/DeepForest"
Contributors = "https://github.com/Weecology/DeepForest/graphs/contributors"

[project.optional-dependencies]
dev = [
    "build>=1.3.0",
    "bump-my-version",
    "comet_ml",
    "docformatter",
    "nbqa",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-profiling",
    "pytest-xdist",
    "ruff",
    "twine",
]

docs = [
    "docutils<0.18",
    "myst-parser",
    "nbmake",
    "nbsphinx",
    "numpydoc",
    "pydata-sphinx-theme",
    "recommonmark",
    "sphinx",
    "sphinx-design",
    "sphinx-markdown-tables",
    "sphinx_rtd_theme",
]

[project.scripts]
deepforest = "deepforest.scripts.cli:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
target-version = "py311"
line-length = 90

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "UP038", # Use X | Y in isinstance call - this is incorrect for runtime
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["deepforest"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::pytorch_lightning.utilities.warnings.PossibleUserWarning"
]
markers = [
    "slow: marks tests that are slow to run",
    "integration: marks integration tests"
]
